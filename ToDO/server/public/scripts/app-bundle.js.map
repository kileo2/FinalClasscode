{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/home.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/todos.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/completed.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","users","message","showLogin","loginError","login","email","password","sessionStorage","setItem","JSON","stringify","response","user","navigate","catch","console","log","error","showRegister","firstName","lastName","registerError","save","serverResponse","List","todos","parse","getItem","showList","showCompleted","priorities","activate","getUserTodos","_id","logout","removeItem","createTodo","todoObj","todo","description","dateDue","Date","userId","priority","editTodo","deleteTodo","completeTodo","completed","saveTodo","toggleShowCompleted","changeFiles","filesToUpload","Array","push","files","removeFile","index","splice","alert","todoId","length","uploadFile","back","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","localStorage","append","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","ToDos","TODO_SERVICE","todosArray","id","formData","FormData","forEach","item","i","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","CompletedValueConverter","toView","array","filter","DateFormatValueConverter","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["\nimport {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep); \n    config.map([\n      { \n\troute: ['', 'home'],\n\t moduleId: './modules/home',\n\t name: 'Home' \n      },\n      {\n\t route: 'list',\n\t moduleId: './modules/list',\n   name: 'List',\n   auth: true \n     }\n    ]);\n  }\n}\n","var authConfig = {\n    baseUrl: \"http://localhost:5000/api\",\n    loginUrl: '/users/login',\n    tokenName: 'token',\n    authHeader: 'Authorization',\n    authToken: '',\n    logoutRedirect: '#/home'\n  }\n  \n  export default authConfig;\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import regeneratorRuntime from 'regenerator-runtime';\nimport environment from './environment';\nimport config from './auth-config';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({  warnings: {    wForgottenReturn: false  }});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n         baseConfig.configure(config);\n    })\n    .feature('resources'); \n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {Users} from '../resources/data/users';\nimport {AuthService} from 'aurelia-auth';\n\n\n@inject(Router,Users, AuthService)\nexport class Home {\n  constructor(router,users,auth) {\n  this.router = router;\n  this.users = users;  \n          this.message = 'Home';\n          this.showLogin = true;\n          this.auth = auth;\n          this.loginError = '';\n      \n  }\n\n  login(){\n    return this.auth.login(this.email, this.password)\n    .then(response => {\n    sessionStorage.setItem(\"user\", JSON.stringify(response.user));\n    this.loginError = \"\";\n\n\t  this.router.navigate('list');\n  })\n  .catch(error => {\n    console.log(error);\n    this.loginError = \"Invalid credentials.\";\n  });\n};\n\n\n  showRegister(){\n    this.user = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\"\n      }\n      this.registerError = \"\";\n    this.showLogin = false;\n  }\n   async save() {\n    console.log(this.user);\n          let serverResponse = await this.users.save(this.user);\n          if (!serverResponse.error) {\n            this.showLogin = true;\n          } else {\n            this.registerError = \"There was a problem registering the user.\"\n          }\n    }\n    \n \n}\n","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\nimport { AuthService } from 'aurelia-auth';\nimport { ToDos } from '../resources/data/todos';\n\n@inject(Router, AuthService, ToDos)\nexport class List {\n\n  constructor(router, auth, todos) {\n    this.router = router;\n    this.todos=todos;\n    this.auth = auth;\n    this.message = 'List';\n    this.user = JSON.parse(sessionStorage.getItem('user'));\n    this.showList = true;\n    this.showCompleted = false;\n    this.priorities = ['Low', 'Medium', 'High', 'Critical'];\n\n\n  }\n  async activate() {\n    await this.todos.getUserTodos(this.user._id);\n  }\n\n  logout() {\n    sessionStorage.removeItem('user');\n    this.auth.logout();\n  }\n\n  createTodo() {\n    this.todoObj = {\n      todo: \"\",\n      description: \"\",\n      dateDue: new Date(),\n      userId: this.user._id,\n      priority: this.priorities[0]\n    }\n    this.showList = false;\n  }\n\n  editTodo(todo) {\n    this.todoObj = todo;\n    this.showList = false;\n  }\n  deleteTodo(todo) {\n    this.todos.deleteTodo(todo._id);\n  }\n  completeTodo(todo) {\n    todo.completed = !todo.completed;\n    this.todoObj = todo;\n    this.saveTodo();\n  }\n\n  toggleShowCompleted() {\n    this.showCompleted = !this.showCompleted;\n  }\n  changeFiles() {\n    this.filesToUpload = new Array();\n    this.filesToUpload.push(this.files[0]);\n  }\n  removeFile(index) {\n    this.filesToUpload.splice(index, 1);\n  }\n\n\n  async saveTodo(){\n            if(this.todoObj){       \n                let response = await this.todos.save(this.todoObj);\n                if(response.error){\n                    alert(\"There was an error creating the ToDo\");\n                } else {\n                    var todoId = response._id;\n                    if(this.filesToUpload && this.filesToUpload.length){\n                        await this.todos.uploadFile(this.filesToUpload, this.user._id, todoId);\n                        this.filesToUpload = [];\n                    }\n                }\n                this.showList = true;\n            }\n        }\n    \n    \n  // constructor(todos, auth){\n  // \tthis.todos = todos;\n  // \tthis.auth = auth;\n\n  // \tthis.user = JSON.parse(sessionStorage.getItem('user'));\n  // \tthis.title = \"Ross Has Things ToDo!\"\n  // \tthis.editTodoForm = false;\n  // \tthis.showCompleted = false;\n  // \tthis.priorities = ['Low', 'Medium', 'High', 'Critical'];\n  // }\n\n\n  back() {\n    this.showList = false;\n  }\n\nback(){\n  this.showList=true;\n}\n}\n","export function configure(config) {\n  config.globalResources([\n    './value-converters/date-format','./value-converters/completed','./elements/flatpickr'\n  ]);\n  //config.globalResources([]);\n}\n","import { inject } from 'aurelia-framework';\nimport { HttpClient, json } from 'aurelia-fetch-client';\n\n@inject(HttpClient)\nexport class DataServices {\n\n    constructor(http) {\n        this.httpClient = http;\n        this.BASE_URL = \"http://localhost:5000/api/\";\n\n        this.httpClient.configure(config => {\n            config\n                .withBaseUrl(this.BASE_URL)\n                .withDefaults({\n                    credentials: 'same-origin',\n                    headers: {\n                        'Accept': 'application/json',\n                        'X-Requested-With': 'Fetch'\n                    }\n                })\n                .withInterceptor({\n                    request(request) {\n                        var authHeader = 'Bearer ' + localStorage.getItem('aurelia_token')\n                        request.headers.append('Authorization', authHeader);\n                        console.log(`Requesting ${request.method} ${request.url}`);\n                        return request;\n                    },\n                    response(response) {\n                        console.log(`Received ${response.status} ${response.url}`);\n                        return response;\n                    }\n                });\n        });\n    }\n    get(url) {\n        return this.httpClient.fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                return data;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n\n    post(content, url) {\n        return this.httpClient\n            .fetch(url, {\n                method: 'post',\n                body: json(content)\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n\n    put(content, url) {\n        return this.httpClient\n            .fetch(url, {\n                method: 'put',\n                body: json(content)\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n\n    delete(url) {\n        return this.httpClient\n            .fetch(url, {\n                method: 'delete'\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n    uploadFiles(files, url) {\n        return this.httpClient\n            .fetch(url, {\n                method: 'post',\n                body: files\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n    }\n\n\n}\n","import { inject } from 'aurelia-framework';\nimport { DataServices } from './data-services';\n@inject(DataServices)\nexport class ToDos {\n    constructor(data) {\n        this.data = data;\n        this.TODO_SERVICE = 'todos';\n        this.todosArray = [];\n        this.user = JSON.parse(sessionStorage.getItem('user'));\n        this.showList = true;\n\n    }\n    \n\n    async getUserTodos(id) {\n        let response = await this.data.get(this.TODO_SERVICE + \"/user/\" + id);\n        if (!response.error && !response.message) {\n            this.todosArray = response;\n        }\n    }\n    async save(todo) {\n        if (todo) {\n            if (!todo._id) {\n                let serverResponse = await this.data.post(todo, this.TODO_SERVICE);\n                if (!serverResponse.error) {\n                    this.todosArray.push(serverResponse);\n                }\n                return serverResponse;\n            } else {\n                let serverResponse = await this.data.put(todo, this.TODO_SERVICE + \"/\" + todo._id);\n                if (!serverResponse.error) {\n                    // this.updateArray(response);\n                }\n                return serverResponse;\n            }\n        }\n    }\n    async uploadFile(files, userId, todoId){\n                let formData = new FormData();\n        \u000b        files.forEach((item, index) => {\n            formData.append(\"file\" + index, item);\n                });\n            \n            let response = await this.data.uploadFiles(formData, this.TODO_SERVICE + \u000b\t\t\"/upload/\" + userId + \"/\" + todoId);\n            return response;\n        }\n        \n        \n\n    async deleteTodo(id){\n\t\tlet response = await this.data.delete(this.TODO_SERVICE + \"/\" + id);\n\t\tif(!response.error){\n\t\t\tfor(let i = 0; i < this.todosArray.length; i++){\n\t\t\t\tif(this.todosArray[i]._id === id){\n\t\t\t\t\tthis.todosArray.splice(i,1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n}\n","import { inject } from 'aurelia-framework';\nimport { DataServices } from './data-services';\n\n@inject(DataServices)\nexport class Users {\n    constructor(data) {\n                this.data = data;\n                this.USER_SERVICE = 'users';\n        }\n    async save(user) {\n        if (user) {\n            let serverResponse = await this.data.post(user, this.USER_SERVICE);\n            return serverResponse;\n        }\n    }\n\n}\n\n","import { inject, bindable, bindingMode } from 'aurelia-framework';\nimport Flatpickr from 'flatpickr';\n@inject(Element)\nexport class FlatPickerCustomElement {\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) value;\n    constructor(element) {\n        this.element = element;\n    }\n    bind() {\n        const defaultConfig = {\n            altInput: true,\n            altFormat: \"F j, Y\",\n            wrap: true\n        };\n        this._config = Object.assign({}, defaultConfig);\n        this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\n    }\n    attached() {\n        this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\n    }\n    onChange(selectedDates, dateStr, instance) {\n        this.value = selectedDates[0]\n    }\n    valueChanged() {\n        if (!this.flatpickr) {\n            return;\n        }\n        if (this.value === this.flatpickr.selectedDates[0]) {\n            return;\n        }\n        let newDate = this.value ? this.value : undefined;\n        this.flatpickr.setDate(newDate);\n    }\n}\n","export class CompletedValueConverter {\n      \n       toView(array, value) {\n         if(!value){\n          return array.filter(item => {\n            return !item.completed;\n          })\n         } else {\n           return array;\n         }\n       }\n      }\n    ","import moment from 'moment';\n\u000bexport class DateFormatValueConverter {\n\u000btoView(value) {\nif(value === undefined || value === null){\n\treturn;\n    \t\t}\n    \n    \t\treturn moment(value).format('MMM Do YYYY');\n\t}\n}\n\n\n"],"sourceRoot":".."}